TEXT
=====

Introduction
============

Welcome to Introduction to Python, with `Veroskills <https://veroskills.com>`_. This course will serve as an introduction to coding via the `Python <https://python.org>`_ programming language.

.. admonition:: Python reads like English

   Python is the ideal first programming language. We write Python code in a manner that is analogous to written English.

History of Python
++++++ 

Python was written in 1991 by `Guido van Rossem <https://gvanrossum.github.io/>`_. He named the language after the British comedy troop `Monty Python <http://montypython.com/>`_.

.. sidebar:: Interesting Note:

    Take a moment to visit the Python creator's website. It seems to be an axiom that the biggest programming superstars all have the most lackluster websites. Follow his links and read a bit. This will help immerse you in the Python culture. This is one, you know?

.. image:: ./images/guido.png
    :class: logo
    :width: 200px


It's tradition that the first program you write simply prints, "Hello, World" to the screen. The following is how you would write that program in the C programming language.

.. code-block:: c

    #include <stdio.h>

    int main(void)
    {
        puts("Hello, World");
        return 0;
    }

This is the same program written in Python:

.. code-block:: python

    print("Hello, World")


Exercise
++++++++

.. admonition:: Practice these in the Veroskills interface

   - Write a Python program that prints another string to the screen.



Data Types
==========

.. admonition:: Four Data Types

    There are four main data types in Python. They are listed in the tables below. Some texts will include the `String` data type as a basic or primitive type. The Python string is a sequence and will be covered later in this course.

.. list-table:: Python Data Types
   :widths: 15, 15, 15
   :header-rows: 1

   * - Name
     - Types
     - Examples
   * - integer
     - :code:`int`
     - 42
   * - float
     - :code:`float`
     - 3.14
   * - boolean
     - :code:`bool`
     - :code:`True` or :code:`False`
   * - None
     - :code:`None`
     - :code:`None`




Logic
=====

Not
+++

The not operator is like flipping a switch. Whatever an expression evaluates to, applying the :code:`not` operator converts it to its opposite.

.. csv-table:: :code:`not`
    :header: :code:`p`, :code:`not p`
    :widths: 10, 10

    :code:`True`, :code:`False`
    :code:`False`, :code:`True`



And 
+++

The only way an :code:`and` statement is true is if both expressions are true. Otherwise, it is false.

.. csv-table:: :code:`and`
    :header: :code:`p`, :code:`q`, :code:`p and q`
    :widths: 10, 10, 10

    :code:`True`, :code:`True`, :code:`True`
    :code:`True`, :code:`False`, :code:`False`
    :code:`False`, :code:`True`, :code:`False`
    :code:`False`, :code:`False`, :code:`False`

Or 
+++

The only way an :code:`or` statement is false is if both expressions are false. Otherwise, it is true.

.. csv-table:: :code:`and`
    :header: :code:`p`, :code:`q`, :code:`p and q`
    :widths: 10, 10, 10

    :code:`True`, :code:`True`, :code:`True`
    :code:`True`, :code:`False`, :code:`True`
    :code:`False`, :code:`True`, :code:`True`
    :code:`False`, :code:`False`, :code:`False`

Exercise
++++++++

.. admonition:: Practice these in the Veroskills interface

   - Write a Python expression that evaluates to True.
   - Use parentheses and convert the Python expression you wrote in the last exercise and make sure it evaluates to false.




